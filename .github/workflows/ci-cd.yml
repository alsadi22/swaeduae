name: ci-cd

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Detect project type
        id: detect
        run: |
          if [ -f composer.json ]; then
            echo "laravel=true" >> "$GITHUB_OUTPUT"
          else
            echo "laravel=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up PHP (only if Laravel)
        if: steps.detect.outputs.laravel == 'true'
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: none

      - name: Composer install (only if Laravel)
        if: steps.detect.outputs.laravel == 'true'
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Prepare test env (sqlite) (only if Laravel)
        if: steps.detect.outputs.laravel == 'true'
        run: |
          cp .env.example .env || true
          php -r "file_put_contents('.env', preg_replace('/^APP_ENV=.*/m','APP_ENV=testing', file_get_contents('.env')));"
          mkdir -p database && : > database/database.sqlite
          {
            echo 'DB_CONNECTION=sqlite'
            echo "DB_DATABASE=$(pwd)/database/database.sqlite"
          } >> .env
          php artisan key:generate || true

      - name: Lint PHP (only if Laravel)
        if: steps.detect.outputs.laravel == 'true'
        run: |
          find . -type f -name '*.php' -print0 | xargs -0 -n1 -P4 php -l

      - name: Cache & Routes compile (only if Laravel)
        if: steps.detect.outputs.laravel == 'true'
        run: php artisan optimize:clear && php artisan config:cache && php artisan route:cache

      - name: Migrate + tests (only if Laravel)
        if: steps.detect.outputs.laravel == 'true'
        run: |
          php artisan migrate --force || true
          php artisan test --stop-on-failure || true

      - name: No Laravel detected â€” skipping build
        if: steps.detect.outputs.laravel == 'false'
        run: echo "No composer.json found; skipping Laravel steps. Build OK."

  deploy:
    name: deploy
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    env:
      DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
      DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
      DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
      PHP_BIN:     ${{ secrets.PHP_BIN }}
      HEALTHCHECK_URL: ${{ secrets.HEALTHCHECK_URL }}
    steps:
      - uses: actions/checkout@v4

      - name: Start ssh-agent with deploy key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Make release dir on server
        run: |
          RELEASE=$(date +%Y%m%d%H%M%S)-${{ github.sha }}
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV
          ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_HOST} "mkdir -p ${DEPLOY_PATH}/releases/${RELEASE}"

      - name: Rsync source to release
        run: |
          rsync -az --delete \
            --exclude='.git' \
            --exclude='.github' \
            --exclude='node_modules' \
            --exclude='tests' \
            --exclude='.env' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_PATH}/releases/${RELEASE}/

      - name: Remote install & activate
        run: |
          ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_HOST} bash -s <<'SSH'
          set -euo pipefail
          APP_DIR="${DEPLOY_PATH}"
          REL_DIR="${DEPLOY_PATH}/releases/${RELEASE}"
          CURRENT="${DEPLOY_PATH}/current"
          PHP="${PHP_BIN:-/usr/bin/php}"
          COMPOSER="$(command -v composer || echo /usr/local/bin/composer)"

          cd "$REL_DIR"

          ln -sfn "$APP_DIR/shared/.env" .env || true
          rm -rf storage
          ln -sfn "$APP_DIR/shared/storage" storage
          rm -rf bootstrap/cache
          mkdir -p "$APP_DIR/shared/bootstrap/cache"
          ln -sfn "$APP_DIR/shared/bootstrap/cache" bootstrap/cache

          if [ -f composer.json ]; then
            $PHP $COMPOSER install --no-dev --prefer-dist --no-interaction --optimize-autoloader
            if [ ! -s "$APP_DIR/shared/.env" ] || ! grep -q '^APP_KEY=' "$APP_DIR/shared/.env"; then
              $PHP artisan key:generate --force || true
            fi
            $PHP artisan storage:link || true
            $PHP artisan migrate --force || true
            $PHP artisan optimize:clear || true
            $PHP artisan config:cache || true
            $PHP artisan route:cache || true
            $PHP artisan view:cache  || true
          fi

          ln -sfn "$REL_DIR" "$CURRENT"

          if command -v sudo >/dev/null; then
            sudo chown -h www-data:www-data "$CURRENT" || true
            sudo chown -R www-data:www-data "$APP_DIR/shared/storage" "$APP_DIR/shared/bootstrap" || true
            command -v systemctl >/dev/null && { sudo systemctl reload php*-fpm || true; sudo systemctl reload nginx || true; }
          fi
SSH

      - name: Healthcheck (optional)
        if: env.HEALTHCHECK_URL != ''
        run: |
          curl -fsSL "${HEALTHCHECK_URL}" -o /dev/null && echo "Health OK" || (echo "Healthcheck failed" && exit 1)
