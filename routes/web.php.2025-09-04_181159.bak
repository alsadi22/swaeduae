<?php
require __DIR__"/partials/disable_internal.php";

// ==== FORCE admin paths to admin subdomain (TOP GUARD) ====
\Illuminate\Support\Facades\Route::domain(env('MAIN_DOMAIN','swaeduae.ae'))->middleware(['web'])->group(function(){
   \Illuminate\Support\Facades\Route::any('/admin{any?}', function ($any = null) {
        $target = 'https://' . env('ADMIN_DOMAIN','admin.swaeduae.ae') . '/admin' . ($any ? '/' . ltrim($any,'/') : '');
        return redirect()->away($target, 301);
    })->where('any','.*')->name('main.admin.redirect');
});
use App\Http\Controllers\Auth\AuthenticatedSessionController;
use Illuminate\Support\Facades\Session;
use App\Http\Controllers\Public\OpportunityController;
use App\Http\Controllers\Public\ApplyController;
use Illuminate\Support\Facades\Route;


Route::get('/partners', function(){ return view('public.partners'); })->name('partners.index');
use App\Http\Controllers\CertificatePdfController;

Route::middleware(['web','auth','verified'])->group(function () {
    Route::get('/certificates/{id}/download', [CertificatePdfController::class,'download'])->whereNumber('id')->name('certificates.download');
    Route::post('/certificates/{id}/resend',   [CertificatePdfController::class,'resend'])->whereNumber('id')->name('certificates.resend');
    Route::post('/certificates/{id}/revoke',   [CertificatePdfController::class,'revoke'])->whereNumber('id')->name('certificates.revoke'); // admin-only in controller
});
Route::middleware(['web','auth','verified'])->get('/applications', function () {
    return view('applications.index');
})->name('applications.index');
Route::middleware(['web','auth','verified'])->get(
  '/certificates',
  [\App\Http\Controllers\CertificateController::class,'index']
)->name('certificates.index');
Route::middleware(['web','auth','verified'])->get(
  '/my/profile',
  [\App\Http\Controllers\My\ProfileController::class,'index']
)->name('my.profile');
Route::match(['GET','POST'],'/qr/checkin',  [\App\Http\Controllers\QR\CheckinController::class,'checkin'])->name('qr.checkin.getpost');
Route::match(['GET','POST'],'/qr/checkout', [\App\Http\Controllers\QR\CheckinController::class,'checkout'])->name('qr.checkout.getpost');
Route::get('/admin/login', function () {
    return redirect()->to('/login');
})->name('admin.login');
use App\Http\Controllers\Auth\SimpleLoginController;

Route::middleware(['web','guest','throttle:10,1'])->group(function () {
    Route::get('/login',  [SimpleLoginController::class, 'show'])->name('login');
    Route::post('/login', [SimpleLoginController::class, 'perform'])->name('login.perform');
});

use App\Http\Controllers\Auth\SimplePasswordResetController;

/* == Password reset (guest, skip custom middlewares) == */
Route::middleware(['web','guest','throttle:10,1'])
    ->withoutMiddleware([\App\Http\Middleware\EnforceOrgRegistration::class, \App\Http\Middleware\MicroCache::class])
    ->group(function () {
        Route::get('/reset-password/{token}', [\App\Http\Controllers\Auth\SimplePasswordResetController::class, 'show'])->name('password.reset');
        Route::post('/reset-password', [\App\Http\Controllers\Auth\SimplePasswordResetController::class, 'update'])->name('password.update.simple');
    });
Route::middleware(['web','auth','verified'])->get('/my/profile', function () {
    return view('my.profile');
})->name('my.profile');


/* == Admin: full routes (idempotent) == */
/* == ADMIN ROUTES (canonical) == */
Route::middleware(['web','auth','role:admin'])
    ->withoutMiddleware([\App\Http\Middleware\EnforceOrgRegistration::class])
    ->prefix('admin')->name('admin.')
    ->group(function () {
        // Dashboard
        Route::get('/', [\App\Http\Controllers\Admin\DashboardController::class,'index'])->name('dashboard');

        // Users
        Route::get('/users',               [\App\Http\Controllers\Admin\UserController::class,'index'])->name('users.index');
        Route::get('/users/{user}',        [\App\Http\Controllers\Admin\UserController::class,'show'])->name('users.show');
        Route::put('/users/{user}',        [\App\Http\Controllers\Admin\UserController::class,'update'])->name('users.save');
        Route::patch('/users/{user}',      [\App\Http\Controllers\Admin\UserController::class,'update']);
        Route::delete('/users/{user}',     [\App\Http\Controllers\Admin\UserController::class,'destroy'])->name('users.destroy');

        // Organizations
        Route::get('/organizations',               [\App\Http\Controllers\Admin\OrganizationsController::class,'index'])->name('organizations.index');
        Route::post('/organizations/{id}/approve', [\App\Http\Controllers\Admin\OrganizationsController::class,'approve'])->name('organizations.approve');
        Route::post('/organizations/{id}/suspend', [\App\Http\Controllers\Admin\OrganizationsController::class,'suspend'])->name('organizations.suspend');

        // Opportunities
        Route::get('/opportunities',                  [\App\Http\Controllers\Admin\OpportunityController::class,'index'])->name('opportunities.index');
        Route::get('/opportunities/{opportunity}',    [\App\Http\Controllers\Admin\OpportunityController::class,'show'])->name('opportunities.show');
        Route::put('/opportunities/{opportunity}',    [\App\Http\Controllers\Admin\OpportunityController::class,'update'])->name('opportunities.save');
        Route::patch('/opportunities/{opportunity}',  [\App\Http\Controllers\Admin\OpportunityController::class,'update']);
        Route::delete('/opportunities/{opportunity}', [\App\Http\Controllers\Admin\OpportunityController::class,'destroy'])->name('opportunities.destroy');

        // Applicants
        Route::get('/applicants',               [\App\Http\Controllers\Admin\ApplicantsController::class,'index'])->name('applicants.index');
        Route::post('/applicants/bulk',         [\App\Http\Controllers\Admin\ApplicantsController::class,'bulk'])->name('applicants.bulk');
        Route::get('/applicants/export',        [\App\Http\Controllers\Admin\ApplicantsController::class,'exportCsv'])->name('applicants.export');
        Route::post('/applicants/{id}/approve', [\App\Http\Controllers\Admin\ApplicantsController::class,'approve'])->name('applicants.approve');
        Route::post('/applicants/{id}/decline', [\App\Http\Controllers\Admin\ApplicantsController::class,'decline'])->name('applicants.decline');

        // Certificates (Admin area)
        Route::get('/certificates',              [\App\Http\Controllers\Admin\CertificateController::class,'index'])->name('certs.index');
        Route::post('/certificates/issue',       [\App\Http\Controllers\Admin\CertificateController::class,'issue'])->name('certs.issue');
        Route::post('/certificates/{id}/reissue',[\App\Http\Controllers\Admin\CertificateController::class,'reissue'])->name('certs.reissue');

        // Attendance / Hours / Reports / Settings
        Route::get('/attendance',          [\App\Http\Controllers\Admin\AttendanceAdminController::class,'index'])->name('attendance.index');
        Route::get('/hours/export',        [\App\Http\Controllers\Admin\HoursReportController::class,'exportCsv'])->name('hours.export');
        Route::post('/hours/bulk-approve', [\App\Http\Controllers\Admin\HoursReportController::class,'bulkApprove'])->name('hours.bulkApprove');

        Route::get('/reports',             [\App\Http\Controllers\Admin\ReportsController::class,'index'])->name('reports.index');
        Route::get('/reports/export',      [\App\Http\Controllers\Admin\ReportsController::class,'export'])->name('reports.export');

        Route::get('/settings',            [\App\Http\Controllers\Admin\SettingsController::class,'index'])->name('settings.index');
        Route::post('/settings/save',      [\App\Http\Controllers\Admin\SettingsController::class,'save'])->name('settings.save');
    });

// Include agent ping health route if present
if (file_exists(base_path('routes/_agent_ping.php'))) { require base_path('routes/_agent_ping.php'); }

// Temporary safe stub for contact form POST to avoid 500s.
// Replace with your real controller when ready.
use Illuminate\Http\Request;
Route::post('contact', function (Request $request) {
    return back()->with('status','ok'); // no-op
})->name('contact.send');
use App\Http\Controllers\ContactController;
Route::middleware(['web'])->group(function () {
    Route::get('/contact', [ContactController::class, 'show'])->name('contact');
    Route::post('/contact', [ContactController::class, 'send'])
        ->middleware('throttle:6,1')
        ->name('contact.send');
});

// Include agent healthz route if present
if (file_exists(base_path('routes/_agent_healthz_web.php'))) { require base_path('routes/_agent_healthz_web.php'); }
Route::middleware(['web'])->get('/healthz-agent', function () {
    return response()->json(['ok'=>true,'ts'=>now()->toISOString()], 200);
})->name('healthz.agent');
// SwaedUAE: minimal logout route for account menu
Route::post('/logout', function (\Illuminate\Http\Request $request) {
    \Illuminate\Support\Facades\Auth::logout();
    $request->session()->invalidate();
    $request->session()->regenerateToken();
    return redirect('/');
})->name('logout');
// SwaedUAE: minimal logout route
Route::post('/logout', function (\Illuminate\Http\Request $request) {
    \Illuminate\Support\Facades\Auth::logout();
    $request->session()->invalidate();
    $request->session()->regenerateToken();
    return redirect('/');
})->name('logout');

Route::get('/theme/demo', fn() => view('public.home_travelpro'))->name('theme.demo');

Route::get('/theme/demo', fn() => view('public.home_travelpro'))->name('theme.demo');


// == Admin Approvals Console ==
use App\Http\Controllers\Admin\ApprovalsController;
Route::middleware(['web','auth','can:admin-access'])->prefix('admin')->name('admin.')->group(function () {
  Route::get('/approvals', [ApprovalsController::class, 'index'])->name('approvals.index');
  Route::post('/approvals/orgs/{id}/approve', [ApprovalsController::class, 'approveOrg'])->name('approvals.orgs.approve');
  Route::post('/approvals/orgs/{id}/deny',    [ApprovalsController::class, 'denyOrg'])->name('approvals.orgs.deny');
  Route::post('/approvals/apps/{id}/approve', [ApprovalsController::class, 'approveApp'])->name('approvals.apps.approve');
  Route::post('/approvals/apps/{id}/deny',    [ApprovalsController::class, 'denyApp'])->name('approvals.apps.deny');
});
