<?php
namespace App\Http\Middleware;
use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class SetLocaleAndHeaders
{
    public function handle(Request $request, Closure $next): Response
    {
        /** @var \Symfony\Component\HttpFoundation\Response $response */
        $response = $next($request);

        // Use current app locale (our app already switches by Accept-Language elsewhere)
        $locale = app()->getLocale() ?: config('app.locale', 'en');

        // Content-Language
        if (!$response->headers->has('Content-Language')) {
            $response->headers->set('Content-Language', $locale);
        }

        // Vary: ensure Accept-Language is present (case-insensitive, no duplicates)
        $existing = $response->headers->get('Vary') ?? '';
        $parts = array_filter(array_map('trim', explode(',', $existing)));
        $lc = array_map('strtolower', $parts);
        if (!in_array('accept-language', $lc, true)) {
            $parts[] = 'Accept-Language';
        }
        $response->headers->set('Vary', implode(', ', array_unique($parts)));

        return $response;
    }
}
