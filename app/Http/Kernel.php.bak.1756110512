<?php

namespace App\Http;

use App\Http\Middleware\SetLocaleAndHeaders;
use App\Http\Middleware\SetLocale;

use Illuminate\Foundation\Http\Kernel as HttpKernel;

use App\Http\Middleware\SecurityHeaders;
use App\Http\Middleware\MicroCache;
class Kernel extends HttpKernel
{
    /**
     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array
     */
    protected $routeMiddleware = [
        org => \Spatie\Permission\Middlewares\RoleMiddleware::class,
        App\Http\Middleware\SetLocaleAndHeaders::class,
\App\Http\Middleware\ReadOnlyMode::class,

        \App\Http\Middleware\TrustProxies::class,
        \Fruitcake\Cors\HandleCors::class,
        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
        \App\Http\Middleware\TrimStrings::class,
        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
];

    /**
     * The application's route middleware groups.
     *
     * @var array
     */
    protected $middlewareGroups = [
        'web' => [
        \App\Http\Middleware\VerifiedPathEnforcer::class,
        \App\Http\Middleware\AdminPathEnforcer::class,
            \App\Http\Middleware\SetLocale::class,
            \App\Http\Middleware\EncryptCookies::class,
            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
            \Illuminate\Session\Middleware\StartSession::class,
            // \Illuminate\Session\Middleware\AuthenticateSession::class,
            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
            \App\Http\Middleware\VerifyCsrfToken::class,    \App\Http\Middleware\FormRateLimit::class,

            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        
            MicroCache::class,
                SecurityHeaders::class],

        'api' => [
            'throttle:api',
            \Illuminate\Routing\Middleware\SubstituteBindings::class,
        ],
    ];

    /**
     * The application's route middleware.
     *
     * These middleware may be assigned to groups or used individually.
     *
     * @var array
     */
// **** DUPLICATE $routeMiddleware START ****
//     
// **** DUPLICATE $routeMiddleware BLOCK REMOVED ****

// **** DUPLICATE $routeMiddleware END ****

    /**
     * Middleware priority ensures non-global middleware execute in a specific order.
     */
    
// **** DUPLICATE $middleware BLOCK REMOVED ****

}
