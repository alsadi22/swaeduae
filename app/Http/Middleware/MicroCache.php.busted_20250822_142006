<?php
namespace App\Http\Middleware;
use Closure;
use Illuminate\Http\Request;

class MicroCache
{
    public function handle(Request $request, Closure $next)
    {
        // SWAED AUTH SKIP START
        if (! ->isMethod('get')) { return (); }
        if (->is('login', 'register', 'org/login', 'org/register')) { return (); }
        // SWAED AUTH SKIP END

        $response = $next($request);

        // Always mark as SKIP for now (no app-level caching)
        if (method_exists($response, 'headers')) {
            try {
                if (!$response->headers->has('X-MicroCache') || trim((string)$response->headers->get('X-MicroCache'))==='') {
                    $response->headers->set('X-MicroCache','SKIP');
                }
            } catch (\Throwable $e) {
                \Log::warning('MicroCache header skipped: '.$e->getMessage());
            }
        }
        return $response;
    }
}
