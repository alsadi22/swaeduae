<?php
namespace App\Http\Middleware;
use Closure;
use Illuminate\Http\Request;
use Symfony\Component\HttpFoundation\Response;

class NormalizeHeaders
{
    public function handle(Request $request, Closure $next): Response
    {
        /** @var \Symfony\Component\HttpFoundation\Response $response */
        $response = $next($request);

        // Ensure Content-Language + Vary: Accept-Language are present (idempotent)
        $locale = app()->getLocale() ?: config('app.locale','en');
        if (!$response->headers->has('Content-Language')) {
        if ($hasCookie || !$request->isMethodSafe()) {
        } else {
        }

        // Always expose an X-MicroCache diagnostic (if upstream middleware didnâ€™t)
        if (!$response->headers->has('X-MicroCache')) {
            $response->headers->set('X-MicroCache', $hasCookie ? 'SKIP' : 'MISS');
        }

        return $response;
    }
}
